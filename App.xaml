<Application x:Class="Vimachem.Hackathon.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Vimachem.Hackathon"
xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro" 
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml">
                </ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml">
                </ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml">
                </ResourceDictionary>
                <!-- Accent and AppTheme setting -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml">
                </ResourceDictionary>
                <ResourceDictionary Source="/Resources/Icons.xaml">
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>


            <Style x:Key="Heading" TargetType="Label">
                <Setter Property="FontSize" Value="18px" />
                <Setter Property="FontWeight" Value="Medium" />
                <Setter Property="Foreground" Value="#FF0C4DA2" />
            </Style>
            <SolidColorBrush x:Key="WindowTitleColorBrush" Color="#FF6C6C6C" />
            <!--<Style x:Key="WindowStyle" TargetType="{x:Type Controls:MetroWindow}">
                <Setter Property="Background" Value="#FFE0E0E0" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="BorderBrush" Value="{StaticResource WindowTitleColorBrush}" />
            </Style>-->
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MetroTextBox}">
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="BorderThickness" Value="0,0,0,2" />
            </Style>

            <Style TargetType="{x:Type DatePicker}">
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="BorderThickness" Value="0,0,0,2" />
            </Style>
            <!--<Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MetroComboBox}">
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="BorderThickness" Value="0,0,0,2" />
                <Setter Property="Background" Value="White" />
                --><!--<Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="True">     </Setter>--><!--
           
                <Style.Triggers>
                    <Trigger Property="SelectedItem" Value="{x:Null}">
                        <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="False" />
                    </Trigger>
                </Style.Triggers>
            </Style>-->
            <!--<Style TargetType="{x:Type Controls:NumericUpDown}">
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="BorderThickness" Value="0,0,0,2" />
                <Setter Property="Background" Value="White" />
            </Style>-->
            <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
            <!--<converters:EnumDescriptionConverter x:Key="enumDescriptionConverter" />
            <converters:LocalDateTimeConverter x:Key="localDateTimeConverter" />-->

            <Color x:Key="HighlightColor">#FF0C4DA2</Color>
            <Color x:Key="AccentBaseColor">#FF0C4DA2</Color>
            <Color x:Key="AccentColor">#FF0C4DA2</Color>
            <Color x:Key="AccentColor2">#FF0C4DA2</Color>
            <Color x:Key="AccentColor3">#FF0C4DA2</Color>
            <Color x:Key="AccentColor4">#FF0C4DA2</Color>
            <Color x:Key="IdealForegroundColor">White</Color>
            <SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource HighlightColor}" />
            <SolidColorBrush x:Key="AccentBaseColorBrush" Color="{StaticResource AccentBaseColor}" />
            <SolidColorBrush x:Key="AccentColorBrush" Color="{StaticResource AccentColor}" />
            <SolidColorBrush x:Key="AccentColorBrush2" Color="{StaticResource AccentColor2}" />
            <SolidColorBrush x:Key="AccentColorBrush3" Color="{StaticResource AccentColor3}" />
            <SolidColorBrush x:Key="AccentColorBrush4" Color="{StaticResource AccentColor4}" />
            <LinearGradientBrush x:Key="ProgressBrush" StartPoint="1.002,0.5" EndPoint="0.001,0.5">
                <GradientStop Offset="0" Color="{StaticResource HighlightColor}" />
                <GradientStop Offset="1" Color="{StaticResource AccentColor3}" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="CheckmarkFill" Color="{StaticResource AccentColor}" />
            <SolidColorBrush x:Key="RightArrowFill" Color="{StaticResource AccentColor}" />
            <SolidColorBrush x:Key="IdealForegroundColorBrush" Color="{StaticResource IdealForegroundColor}" />
            <SolidColorBrush x:Key="IdealForegroundDisabledBrush" Opacity="0.4" Color="{StaticResource IdealForegroundColor}" />
            <SolidColorBrush x:Key="AccentSelectedColorBrush" Color="{StaticResource IdealForegroundColor}" />
            <SolidColorBrush x:Key="MetroDataGrid.HighlightBrush" Color="{StaticResource AccentColor}" />
            <SolidColorBrush x:Key="MetroDataGrid.HighlightTextBrush" Color="{StaticResource IdealForegroundColor}" />
            <SolidColorBrush x:Key="MetroDataGrid.MouseOverHighlightBrush" Color="{StaticResource AccentColor3}" />
            <SolidColorBrush x:Key="MetroDataGrid.FocusBorderBrush" Color="{StaticResource AccentColor}" />
            <SolidColorBrush x:Key="MetroDataGrid.InactiveSelectionHighlightBrush" Color="{StaticResource AccentColor2}" />
            <SolidColorBrush x:Key="MetroDataGrid.InactiveSelectionHighlightTextBrush" Color="{StaticResource IdealForegroundColor}" />
            <SolidColorBrush x:Key="MahApps.Metro.Brushes.ToggleSwitchButton.OnSwitchBrush.Win10" Color="{StaticResource AccentColor}" />
            <SolidColorBrush x:Key="MahApps.Metro.Brushes.ToggleSwitchButton.OnSwitchMouseOverBrush.Win10" Color="{StaticResource AccentColor2}" />
            <SolidColorBrush x:Key="MahApps.Metro.Brushes.ToggleSwitchButton.ThumbIndicatorCheckedBrush.Win10" Color="{StaticResource IdealForegroundColor}" />
            <Style x:Key="SquareButton" TargetType="{x:Type ButtonBase}">
                <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                <Setter Property="MinHeight" Value="25" />
                <Setter Property="Padding" Value="5 6" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Grid Background="{TemplateBinding Background}">
                                <Border x:Name="Background" Background="{x:Null}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Rectangle x:Name="DisabledVisualElement" Fill="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" />
                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                                    <SplineDoubleKeyFrame KeyTime="0" Value="0.7" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused" />
                                        <VisualState x:Name="Unfocused" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ValidationStates">
                                        <VisualState x:Name="Valid" />
                                        <VisualState x:Name="InvalidFocused" />
                                        <VisualState x:Name="InvalidUnfocused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource GrayBrush8}" />
                                    <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#FF535353" />
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            

            <!--<Style x:Key="BorderStyle" TargetType="{x:Type Border}">
            <Setter Property="CornerRadius" Value="10"/>
        </Style>-->
            <Style x:Key="ButtonStyle1"  TargetType="Button">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="#FFBBBBBB" ShadowDepth="3" BlurRadius="3"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFC5C5C5"/>
                            <GradientStop Color="White" Offset="0.82"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="VerticalAlignment"   Value="Stretch" ></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button" >
                            <Border CornerRadius="5" BorderThickness="1" Padding="2" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MenuItemStyle"  TargetType="Button">
                <!--<Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="#FFBBBBBB" ShadowDepth="3" BlurRadius="3"/>
                    </Setter.Value>
                </Setter>-->
                <!--<Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFC5C5C5"/>
                            <GradientStop Color="White" Offset="0.82"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>-->
                <Setter Property="Background" Value="#FF444444"/>
                <Setter Property="HorizontalContentAlignment"   Value="Left" ></Setter>
                <Setter Property="VerticalAlignment"   Value="Stretch" ></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button" >
                            <Border CornerRadius="0" BorderThickness="0" Padding="2" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>





            <Style x:Key="StartStopButtons"  TargetType="Button">
                <!--<Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="#FFBBBBBB" ShadowDepth="3" BlurRadius="3"/>
                    </Setter.Value>
                </Setter>-->
                <!--<Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFC5C5C5"/>
                            <GradientStop Color="White" Offset="0.82"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>-->
                <Setter Property="Background" Value="Transparent"/>

                <Setter Property="HorizontalContentAlignment"   Value="Left" ></Setter>
                <Setter Property="VerticalAlignment"   Value="Stretch" ></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button" >
                            <Border CornerRadius="0" BorderThickness="0" Padding="2" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            

            <Style x:Key="TextStyle"   TargetType="TextBox">
     
                <Setter Property="FontSize" Value="15" ></Setter>
                <Setter Property="Margin" Value="5" ></Setter>
                <Setter Property="HorizontalAlignment" Value="Stretch" ></Setter>
                <Setter Property="HorizontalContentAlignment" Value="Left" ></Setter>
                <Setter Property="VerticalContentAlignment" Value="Center" ></Setter>
                <Setter Property="TextWrapping" Value="Wrap"></Setter>
                <Setter Property="VerticalAlignment"   Value="Stretch" ></Setter>
            </Style>
            <Style x:Key="commonStyle" TargetType="ContentControl">
                <Setter Property="FontSize" Value="15" ></Setter>
                <Setter Property="Margin" Value="5" ></Setter>
                <Setter Property="HorizontalAlignment" Value="Stretch" ></Setter>
                <Setter Property="HorizontalContentAlignment" Value="Center" ></Setter>
                <Setter Property="VerticalContentAlignment" Value="Center" ></Setter>
            </Style>
            <Style x:Key="LabelStyle"     BasedOn="{ StaticResource commonStyle}" TargetType="Label">
                <Setter Property="HorizontalAlignment" Value="Left" ></Setter>
                <Setter Property="VerticalAlignment" Value="Center" ></Setter>
            </Style>
            <Style x:Key="ButtonStyle"    BasedOn="{ StaticResource commonStyle}" TargetType="Button">
                <Setter Property="VerticalAlignment"   Value="Stretch" ></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button" >
                            <Border CornerRadius="10" BorderThickness="1" Padding="2" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CheckBoxStyle"  BasedOn="{ StaticResource commonStyle}" TargetType="CheckBox">
                <Setter Property="IsEnabled"   Value="False" ></Setter>
                <Setter Property="VerticalAlignment"   Value="Center" ></Setter>
                <Setter Property="FlowDirection" Value="RightToLeft" />
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <ContentControl FlowDirection="LeftToRight" Content="{Binding}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>


    </Application.Resources>
</Application>
